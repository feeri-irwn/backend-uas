swagger: "2.0"
info:
  title: Toko API
  description: API untuk manajemen data di sistem toko, mencakup pengguna, produk, kategori, pesanan, dan detail pesanan.
  version: "1.0.0"
host: "backend-uas-kappa.vercel.app"
basePath: "/api"
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: "Masukkan 'Bearer <token Anda>' untuk autentikasi."
    x-tokenPrefix: "Bearer "

paths:
  /users:
    get:
      summary: Mendapatkan semua pengguna
      description: Mengambil daftar semua pengguna.
      produces:
        - application/json
      security:
        - Bearer: []
      responses:
        200:
          description: Daftar pengguna berhasil diambil.
    post:
      summary: Membuat pengguna baru
      description: Menambahkan pengguna baru ke sistem.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Data pengguna baru.
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
              role:
                type: string
                enum:
                  - admin
                  - customer
      responses:
        201:
          description: Pengguna berhasil dibuat.
  /users/{user_id}:
    get:
      summary: Mendapatkan pengguna berdasarkan ID
      description: Mengambil informasi pengguna berdasarkan ID.
      parameters:
        - in: path
          name: user_id
          required: true
          type: integer
      produces:
        - application/json
      security:
        - Bearer: []
      responses:
        200:
          description: Informasi pengguna ditemukan.
        404:
          description: Pengguna tidak ditemukan.
    put:
      summary: Memperbarui pengguna berdasarkan ID
      description: Mengubah data pengguna berdasarkan ID.
      parameters:
        - in: path
          name: user_id
          required: true
          type: integer
        - in: body
          name: body
          description: Data pengguna yang akan diperbarui.
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
              role:
                type: string
                enum:
                  - admin
                  - customer
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Bearer: []
      responses:
        200:
          description: Pengguna berhasil diperbarui.
        404:
          description: Pengguna tidak ditemukan.
    delete:
      summary: Menghapus pengguna berdasarkan ID
      description: Menghapus pengguna dari sistem berdasarkan ID.
      parameters:
        - in: path
          name: user_id
          required: true
          type: integer
      produces:
        - application/json
      security:
        - Bearer: []
      responses:
        200:
          description: Pengguna berhasil dihapus.
        404:
          description: Pengguna tidak ditemukan.

  /products:
    get:
      summary: Mendapatkan semua produk
      description: Mengambil daftar semua produk yang tersedia.
      produces:
        - application/json
      security:
        - Bearer: []
      responses:
        200:
          description: Daftar produk berhasil diambil.
    post:
      summary: Membuat produk baru
      description: Menambahkan produk baru ke dalam sistem.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Data produk baru.
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              price:
                type: number
                format: float
              stock:
                type: integer
      responses:
        201:
          description: Produk berhasil dibuat.
  /products/{product_id}:
    get:
      summary: Mendapatkan produk berdasarkan ID
      description: Mengambil informasi produk berdasarkan ID.
      parameters:
        - in: path
          name: product_id
          required: true
          type: integer
      produces:
        - application/json
      security:
        - Bearer: []
      responses:
        200:
          description: Informasi produk ditemukan.
        404:
          description: Produk tidak ditemukan.
    put:
      summary: Memperbarui produk berdasarkan ID
      description: Mengubah data produk berdasarkan ID.
      parameters:
        - in: path
          name: product_id
          required: true
          type: integer
        - in: body
          name: body
          description: Data produk yang akan diperbarui.
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              price:
                type: number
                format: float
              stock:
                type: integer
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - Bearer: []
      responses:
        200:
          description: Produk berhasil diperbarui.
        404:
          description: Produk tidak ditemukan.
    delete:
      summary: Menghapus produk berdasarkan ID
      description: Menghapus produk dari sistem berdasarkan ID.
      parameters:
        - in: path
          name: product_id
          required: true
          type: integer
      produces:
        - application/json
      security:
        - Bearer: []
      responses:
        200:
          description: Produk berhasil dihapus.
        404:
          description: Produk tidak ditemukan.

  /orders:
    get:
      summary: Mendapatkan semua pesanan
      description: Mengambil daftar semua pesanan.
      produces:
        - application/json
      security:
        - Bearer: []
      responses:
        200:
          description: Daftar pesanan berhasil diambil.
    post:
      summary: Membuat pesanan baru
      description: Menambahkan pesanan baru ke sistem.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Data pesanan baru.
          required: true
          schema:
            type: object
            properties:
              user_id:
                type: integer
              items:
                type: array
                items:
                  type: object
                  properties:
                    product_id:
                      type: integer
                    quantity:
                      type: integer
      responses:
        201:
          description: Pesanan berhasil dibuat.
